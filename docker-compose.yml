version: '3.8'

services:
  app-bot:
    image: "spending/bot"
    hostname: app
    restart: always
    build:
      context: ./
      dockerfile: Dockerfile
    depends_on:
      cache:
        condition: service_started
      kafka:
        condition: service_started
      db:
        condition: service_healthy
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_DB_NAME=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_SSL=disable
      - REDIS_HOST=cache
      - REDIS_PORT=6379
      - REDIS_PASSWORD=redis
      - KAFKA_URL=kafka:9092
      - GRPC_URL=app:50051
    ports:
      - "8080:8080"
      - "50051:50051"

  app-report:
    image: "spending/report"
    restart: always
    build:
      context: ./
      dockerfile: Dockerfile-report
    depends_on:
      cache:
        condition: service_started
      kafka:
        condition: service_started
      db:
        condition: service_healthy
      app-bot:
        condition: service_started
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_DB_NAME=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_SSL=disable
      - REDIS_HOST=cache
      - REDIS_PORT=6379
      - REDIS_PASSWORD=redis
      - KAFKA_URL=kafka:9092
      - GRPC_URL=app:50051
    ports:
      - "8090:8090"

  db:
    image: postgres:14.5
    restart: always
    volumes:
      - ./.database/postgres/data:/var/lib/postgresql/data
      - ./migrations/entrypoint:/docker-entrypoint-initdb.d
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5433:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./metrics/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./metrics/alerts.yml:/etc/prometheus/alerts.yml
    extra_hosts:
      - host.docker.internal:host-gateway

  grafana:
    image: grafana/grafana-oss
    ports:
      - "3000:3000"
    volumes:
      - ./metrics/data:/var/lib/grafana
    links:
      - prometheus

  jaeger:
    image: jaegertracing/all-in-one:1.18
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686" # web
      - "14268:14268"
      - "9411:9411"

  cache:
    image: "spending/cache"
    build:
      context: ./redis
      dockerfile: ./Dockerfile
    restart: always
    ports:
      - "6379:6379"
    command: redis-server /usr/local/etc/redis/redis.conf --save 20 1 --loglevel warning --requirepass redis

  kafka:
    image: wurstmeister/kafka
    hostname: kafka
    ports:
      - "9092:9092"
    links:
      - zookeeper
    environment:
      KAFKA_ADVERTISED_HOST_NAME: "kafka"
      KAFKA_ADVERTISED_PORT: "9092"
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_CREATE_TOPICS: "report:2:1"
    depends_on:
      - zookeeper

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
